{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["AboutPage","keywords","title","className","style","textIndent","Header","useState","isExpanded","toggleExpansion","site","useStaticQuery","to","siteMetadata","onClick","viewBox","xmlns","d","route","map","link","key","class","Layout","children","Helmet","href","rel","fill","height","width","gradientUnits","id","x1","x2","y1","y2","stop-color","offset"],"mappings":"6FAAA,wDA+DeA,UA1Df,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,SAAU,CAAC,gBAAD,2CAMVC,MAAM,SAGR,6BAASC,UAAU,IACjB,wBAAIA,UAAU,2CAAd,mjCAkBA,uBAAGC,MAAO,CAAEC,WAAY,GAAKF,UAAU,iBAAvC,iiCAmBF,iCACE,yBAAKA,UAAU,4C,sHCWRG,MAhEf,WACE,MAAsCC,oBAAS,GAAxCC,EAAP,KAAmBC,EAAnB,KACQC,EAASC,yBAAe,cAAxBD,KAUR,OACE,4BAAQP,UAAU,QAChB,yBAAKA,UAAU,4EACb,kBAAC,OAAD,CAAMA,UAAU,6CAA6CS,GAAG,KAC9D,0BAAMT,UAAU,2CACbO,EAAKG,aAAaX,QAIvB,4BACEC,UAAU,+EACVW,QAAS,kBAAML,GAAiBD,KAEhC,yBACEL,UAAU,uBACVY,QAAQ,YACRC,MAAM,8BAEN,uCACA,0BAAMC,EAAE,kDAIZ,yBACEd,WACEK,EAAU,kBADH,6CAIR,CACC,CACEU,MAAM,QACNhB,MAAM,SAERiB,KAAI,SAAAC,GAAI,OACR,kBAAC,OAAD,CACEjB,UAAU,gGACVkB,IAAKD,EAAKlB,MACVU,GAAIQ,EAAKF,OAERE,EAAKlB,YAKd,yBAAKoB,MAAM,QACT,wBAAInB,UAAU,iCACd,wBAAIA,UAAU,mC,UCyBPoB,IA/Ef,YAA+B,IAAbC,EAAY,EAAZA,SAChB,OACE,yBAAKrB,UAAU,gEACb,kBAACsB,EAAA,OAAD,KACE,0BACEC,KAAK,+DACLC,IAAI,gBAIR,kBAAC,EAAD,MAEA,yBACExB,UAAU,wCACVyB,KAAK,OACLC,OAAO,MACPd,QAAQ,cACRe,MAAM,MACNd,MAAM,8BAEN,0BACEC,EAAE,mKACFW,KAAK,wBAEP,8BACE,oCACEG,cAAc,iBACdC,GAAG,gBACHC,GAAG,UACHC,GAAG,MACHC,GAAG,UACHC,GAAG,QAEH,0BAAMC,aAAW,YACjB,0BAAMC,OAAO,UAAUD,aAAW,eAKxC,0BAAMlC,UAAU,yFACbqB,GAGH,gCACE,yBAAKrB,UAAU,uDACb,uBAAGA,UAAU,mBACX,kBAAC,OAAD,CACEA,UAAU,8CACVS,GAAG,KAFL,iBAKQ,IANV,IAQE,uBACET,UAAU,iCACVuB,KAAK,sCAFP,oBAQF,2BACE,uBACEvB,UAAU,uCACVuB,KAAK,oCAFP","file":"component---src-pages-about-js-3358cf42ad6493fb9ef6.js","sourcesContent":["import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nfunction AboutPage() {\n  return (\n    <Layout>\n      <SEO\n        keywords={[\n          `unintendedcon`,\n          `reallyidk`,\n          `jonathan wong`,\n          `suchcaptcha`\n        ]}\n        title=\"Home\"\n      />\n\n      <section className=\"\">\n        <h1 className=\"text-lg inline-block my-8 leading-loose\">\n          Hi, it's Jonathan. I'm trying to get better at documenting stuff (if\n          no one hears a tree fall, did it really fall?). I've created a bunch\n          of projects, most of them web-appy. Previously, I've built a web\n          pastebin with php (that was like ~5yrs ago), a steganography service\n          (lost to the c9 acquisition), hosted owncloud for a year or so on RHEL\n          (before they rebranded openshift), built a hackathon schedule parser\n          using flask + selenium, built a web LaTeX hoster using python, built a\n          markdown processor using codemirror + pandoc, automated spanish hw,\n          built a terribly insecure discord server maintenance bot, built a\n          webapp that attempts to track airline sentiment on a week by week\n          basis (its not very good), built a really inappropriate chatbot,\n          created a wifi hotspot finder app, released an applescript dmg that\n          helped with some common utilities, attempted to bypass Apple licensing\n          restrictions (like an idiot, I thought I could just upload it and and\n          redownload it), and technically got a triple-boot (it wasn't\n          sustainable and pretty much broke after a day or so).\n        </h1>\n        <p style={{ textIndent: 0 }} className=\"leading-loose\">\n          Whew, did you read all that? Don't worry, most of that stuff was\n          really shitty code. It was fun, though, and it sorta worked. I'm now\n          more interested in how the tools we use create incentives towards\n          certain behaviors. I'm a big fan of things like programmable money and\n          how we can create incentives where there previously were none. I'm\n          also really interested in patterns, how things work (logistics,\n          aerospace, coordination problems, orgs, mechanism design, biology) and\n          how tech can apply to them. I'm also a strong believer in people being\n          humans and that we should bias towards kindness, connection, and\n          understanding. We've got one life and everyone's fighting their own\n          battles. It's much easier to be negative because that's the default,\n          most things fail. And yet, (here comes the I love science part) the\n          probability that you and I exist in this world are so shockingly low\n          given all that had to occur. A huge explosion had to happen, the Earth\n          had to form, so many events had to happen to conspire towards where we\n          are today. But here we are.\n        </p>\n      </section>\n      <section>\n        <div className=\"leading-loose text-gray-800 text-xl\"></div>\n      </section>\n    </Layout>\n  )\n}\n\nexport default AboutPage\n","import { graphql, useStaticQuery, Link } from \"gatsby\"\nimport React, { useState } from \"react\"\nimport \"./header.css\"\n\nfunction Header() {\n  const [isExpanded, toggleExpansion] = useState(false)\n  const { site } = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <header className=\"z-40\">\n      <div className=\"flex flex-wrap items-center justify-between max-w-4xl mx-auto p-4 md:p-8\">\n        <Link className=\"flex items-center no-underline header-logo\" to=\"/\">\n          <span className=\"font-black text-2xl tracking-tight logo\">\n            {site.siteMetadata.title}\n          </span>\n        </Link>\n\n        <button\n          className=\"md:hidden border border-white flex items-center px-3 py-2 rounded text-white\"\n          onClick={() => toggleExpansion(!isExpanded)}\n        >\n          <svg\n            className=\"fill-current h-3 w-3\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <title>Menu</title>\n            <path d=\"M0 3h20v2H0V3zm0 6h20v2H0V9zm0 6h20v2H0v-2z\" />\n          </svg>\n        </button>\n\n        <nav\n          className={`${\n            isExpanded ? `block` : `hidden`\n          } md:flex md:items-center w-full md:w-auto`}\n        >\n          {[\n            {\n              route: `/blog`,\n              title: `BLOG`\n            }\n          ].map(link => (\n            <Link\n              className=\"block md:inline-block mt-4 md:mt-0 md:ml-6 no-underline font-bold text-sm hover:text-gray-800\"\n              key={link.title}\n              to={link.route}\n            >\n              {link.title}\n            </Link>\n          ))}\n        </nav>\n      </div>\n      <div class=\"flex\">\n        <hr className=\"lg:w-1/4 md:w-1/12 invisible\" />\n        <hr className=\"sm:w-full md:w-5/6 lg:w-2/4\" />\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { Link } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nfunction Layout({ children }) {\n  return (\n    <div className=\"flex flex-col font-sans min-h-screen text-gray-900 layout-bg\">\n      <Helmet>\n        <link\n          href=\"https://fonts.googleapis.com/css?family=Poppins&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Helmet>\n\n      <Header />\n\n      <svg\n        className=\"absolute z-0 top-0 right-0 opacity-50\"\n        fill=\"none\"\n        height=\"298\"\n        viewBox=\"0 0 819 298\"\n        width=\"819\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M283.935 267.374C160.221 283.924 46.5144 197.049 29.9651 73.3348C13.4158 -50.3796 100.29 -164.086 224.005 -180.635L892.054 -270L951.984 178.009L283.935 267.374Z\"\n          fill=\"url(#paint0_linear)\"\n        />\n        <defs>\n          <linearGradient\n            gradientUnits=\"userSpaceOnUse\"\n            id=\"paint0_linear\"\n            x1=\"29.9651\"\n            x2=\"714\"\n            y1=\"73.3348\"\n            y2=\"-129\"\n          >\n            <stop stop-color=\"#C94B4B\" />\n            <stop offset=\"0.86501\" stop-color=\"#4B134F\" />\n          </linearGradient>\n        </defs>\n      </svg>\n\n      <main className=\"flex flex-col flex-1 md:justify-center max-w-4xl mx-auto px-4 py-8 md:p-8 w-full z-40\">\n        {children}\n      </main>\n\n      <footer>\n        <nav className=\"flex justify-between max-w-4xl mx-auto py-4 text-sm\">\n          <p className=\"text-white flex\">\n            <Link\n              className=\"font-bold no-underline text-gray-800 w-auto\"\n              to=\"/\"\n            >\n              Jonathan Wong\n            </Link>{\" \"}\n            -\n            <a\n              className=\"font-bold text-blue-300 w-auto\"\n              href=\"https://twitter.com/_unintendedcon\"\n            >\n              @_unintendedcon\n            </a>\n          </p>\n\n          <p>\n            <a\n              className=\"font-bold no-underline text-gray-800\"\n              href=\"https://github.com/unintendedcon\"\n            >\n              GitHub\n            </a>\n          </p>\n        </nav>\n      </footer>\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default Layout\n"],"sourceRoot":""}