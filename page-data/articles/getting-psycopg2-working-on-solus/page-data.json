{"componentChunkName":"component---src-templates-blog-template-js","path":"/articles/getting-psycopg2-working-on-solus","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Getting psycopg2 working on Solus","date":"2020-06-30T23:43:00.000Z","description":"Not as easy as it sounds. <Libpq-fe.h> is not quite where you think it is.","keywords":["python","development"]},"html":"<p>If you're working on any sort of fullstack project, you're likely to encounter postgres. And if you're working in python with a framework like sanic, responder, or django, you're likely to encounter it's python driver psycopg2.</p>\n<p>If you attempt to install a django project, you'll get this error.</p>\n<p><img src=\"src/images/libpq-fe.png\"></p>\n<p>If you search this up, you'll encounter stackoverflow posts like <a href=\"https://stackoverflow.com/questions/13086073/rails-install-pg-cant-find-the-libpq-fe-h-header\" title=\"this one\">https://stackoverflow.com/questions/13086073/rails-install-pg-cant-find-the-libpq-fe-h-header</a>.</p>\n<p>You'll be prompted to install something like libpq-dev. A quick <code class=\"language-text\">eopkg search libpq-dev</code> will turn up nothing, however. The package is actually in postgresql-devel.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo eopkg install postgresql-devel</code></pre></div>"}},"pageContext":{"slug":"getting-psycopg2-working-on-solus"}}}